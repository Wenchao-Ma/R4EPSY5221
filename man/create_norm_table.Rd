% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normtable.R
\name{create_norm_table}
\alias{create_norm_table}
\title{Create Norm Tables for Test Scores}
\usage{
create_norm_table(
  score,
  min_value = NULL,
  max_value = NULL,
  digits = 2,
  include_frequencies = FALSE
)
}
\arguments{
\item{score}{A numeric vector of raw scores from which to derive norms.
Missing values (NA) are automatically removed.}

\item{min_value}{A numeric value specifying the minimum raw score to include
in the norm table. If NULL (default), uses the minimum
observed score in the data.}

\item{max_value}{A numeric value specifying the maximum raw score to include
in the norm table. If NULL (default), uses the maximum
observed score in the data.}

\item{digits}{An integer specifying the number of decimal places for rounding
most scores. Default is 2. PR is rounded to 1 decimal place,
NCE and stanines are integers.}

\item{include_frequencies}{Logical. If TRUE, includes frequency counts and
cumulative frequencies in the output. Default is FALSE.}
}
\value{
A data frame with the following columns:
\describe{
\item{rawscore}{Raw scores from max_value to min_value}
\item{frequency}{Count of students at each score (if include_frequencies = TRUE)}
\item{cumulative_freq}{Cumulative frequency up to each score (if include_frequencies = TRUE)}
\item{PR}{Percentile rank (0-100)}
\item{zscore}{Linear z-score (mean = 0, SD = 1)}
\item{Tscore}{T-score (mean = 50, SD = 10)}
\item{normalized_z}{Area-transformation normalized z-score}
\item{stanines}{Stanine scores (1-9, mean = 5, SD = 2)}
\item{NCE}{Normal Curve Equivalent (1-99, mean = 50, SD = 21.06)}
}
}
\description{
This function creates a comprehensive norm table that converts raw scores
to various standardized score types including percentile ranks, z-scores,
T-scores, normalized z-scores, stanines, and Normal Curve Equivalents (NCE).
}
\details{
The function calculates several types of derived scores:

\strong{Percentile Rank (PR):} The percentage of scores below a given raw score.
Formula: PR = (Number of scores below X / Total N) × 100

\strong{Linear z-score:} Standard score with mean = 0, SD = 1.
Formula: z = (X - Mean) / SD

\strong{T-score:} Linear transformation of z-score with mean = 50, SD = 10.
Formula: T = z × 10 + 50

\strong{Normalized z-score:} Area-transformation that forces a normal distribution.
Based on the percentile rank and inverse normal transformation.

\strong{Stanines:} 9-point scale with mean = 5, SD = 2.
Formula: Stanine = 5 + (normalized z × 2), bounded between 1 and 9.

\strong{NCE (Normal Curve Equivalent):} Similar to percentiles but with equal
intervals. Scale of 1-99 with mean = 50, SD = 21.06.
Formula: NCE = (normalized z × 21.06) + 50, bounded between 1 and 99.
\strong{Deviation IQ:} IQ scores with mean = 100 and SD = 15.

\strong{SAT_score:} Simulated SAT-like scores (mean = 500, SD = 100).

\strong{Scaled_score:} Standard scale scores (mean = 10, SD = 3).

\strong{Sten:} Standard ten scores from 1 to 10 (mean = 5.5, SD = 2).

\strong{Quartile/Decile:} Rank-based grouping into 4 or 10 intervals based on PR.
}
\note{
\itemize{
\item The function assumes that higher raw scores represent better performance.
\item Percentile ranks are calculated using the "below" method (strict inequality).
\item NCE scores of 1, 50, and 99 correspond to percentiles 1, 50, and 99 respectively.
\item Stanines divide the distribution into 9 parts with specified percentages.
}
}
\examples{
# Generate sample test scores
set.seed(123)
test_scores <- round(rnorm(1000, mean = 75, sd = 12))

# Create basic norm table
norms <- create_norm_table(test_scores)
head(norms)

# Create norm table with specific score range
norms_range <- create_norm_table(test_scores, min_value = 50, max_value = 100)

# Include frequency information
norms_freq <- create_norm_table(test_scores, include_frequencies = TRUE)

# Custom precision
norms_precise <- create_norm_table(test_scores, digits = 3)

}
